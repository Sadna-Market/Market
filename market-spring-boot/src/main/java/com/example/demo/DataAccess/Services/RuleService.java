package com.example.demo.DataAccess.Services;

import com.example.demo.DataAccess.Entity.DataBuyRule;
import com.example.demo.DataAccess.Entity.DataDiscountRule;
import com.example.demo.DataAccess.Repository.BuyRuleRepository;
import com.example.demo.DataAccess.Repository.DiscountRuleRepository;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class RuleService {
    private static final Logger logger = Logger.getLogger(RuleService.class);
    private final DiscountRuleRepository discountRuleRepository;
    private final BuyRuleRepository buyRuleRepository;

    @Autowired
    public RuleService(DiscountRuleRepository discountRuleRepository, BuyRuleRepository buyRuleRepository) {
        this.discountRuleRepository = discountRuleRepository;
        this.buyRuleRepository = buyRuleRepository;
    }

   // @Transactional(rollbackFor = {Exception.class}, timeout = 10)
    public boolean insertDiscountRule(DataDiscountRule discountRule) {
        try {
            DataDiscountRule dataDiscountRule = discountRuleRepository.saveAndFlush(discountRule);
            //set the id's that were generated by db and store them to the data object
            discountRule.setDiscountRuleId(dataDiscountRule.getDiscountRuleId());
            logger.info(String.format("inserted discount rule %d successfully to db", discountRule.getDiscountRuleId()));
            return true;
        } catch (Exception e) {
            logger.error(String.format("failed to insert discount rule to db, ERROR: %s", e.getMessage()));
            return false;
        }
    }
    // @Transactional(rollbackFor = {Exception.class}, timeout = 10)
    public boolean insertBuyRule(DataBuyRule buyRule) {
        try {
            DataBuyRule dataBuyRule = buyRuleRepository.saveAndFlush(buyRule);
            //set the id's that were generated by db and store them to the data object
            buyRule.setBuyRuleId(dataBuyRule.getBuyRuleId());
            logger.info(String.format("inserted discount rule %d successfully to db", dataBuyRule.getBuyRuleId()));
            return true;
        } catch (Exception e) {
            logger.error(String.format("failed to insert buy rule to db, ERROR: %s", e.getMessage()));
            return false;
        }
    }
}
