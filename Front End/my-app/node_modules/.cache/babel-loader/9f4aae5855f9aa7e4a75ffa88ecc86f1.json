{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lielk\\\\Documents\\\\GitHub\\\\Market\\\\Front End\\\\my-app\\\\src\\\\components\\\\BuyingPolicy\\\\ComposeRules\\\\ConditionRule.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport RuleList from \"../RuleList\";\nimport ComposeRuleList from \"./ComposeRuleList\";\nimport \"./ConditionRule.css\";\nimport createApiClientHttp from \"../../../client/clientHttp.js\";\nimport { errorCode } from \"../../../ErrorCodeGui\";\nimport * as RulesClass from \"../../RulesHelperClasses/BuyingRules\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConditionRule = props => {\n  _s();\n\n  console.log(\"ConditionRule\");\n  const apiClientHttp = createApiClientHttp();\n  const [enteredError, SetError] = useState(\"\");\n  let UUID = props.uuid;\n  let storeID = props.storeID;\n  let list = [];\n\n  const changeList = (toAdd, ruleID) => {\n    if (toAdd) {\n      //console.log(\"add rule #\" + ruleID);\n      list.push(ruleID);\n    } else {\n      //console.log(\"remove rule #\" + ruleID);\n      list = list.filter(rule => rule != ruleID);\n    }\n  }; //todo: create rule\n\n\n  async function confirmHandler() {\n    let combineAndMap = {\n      \"combineCondition\": list\n    };\n    const sendRulesResponse = await apiClientHttp.sendRules(combineAndMap);\n\n    if (sendRulesResponse.errorMsg !== -1) {\n      SetError(errorCode.get(sendRulesResponse.errorMsg));\n    } else {\n      // props.onRule(sendRulesResponse.value);\n      props.onRule();\n    }\n  }\n\n  const [ifRule, SetIfRule] = useState(\"\");\n\n  const ifRuleChangeHandler = event => {\n    SetIfRule(event.target.value);\n  };\n\n  const [thenRule, SetThenRule] = useState(\"\");\n\n  const thenRuleChangeHandler = event => {\n    SetThenRule(event.target.value);\n  }; //const [command, setCommand] = useState();\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"condition\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Condition Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"if Rule #\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: ifRule,\n      onChange: ifRuleChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"happened ,then Rule #\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: thenRule,\n      onChange: thenRuleChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" happens, when you finish press\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: confirmHandler,\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ComposeRuleList, {\n        uuid: UUID,\n        storeID: storeID,\n        onChangeList: changeList,\n        checkbox: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConditionRule, \"8pwyJqIpHrzax/gmEBJg42cW6yg=\");\n\n_c = ConditionRule;\nexport default ConditionRule;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConditionRule\");","map":{"version":3,"names":["React","useState","RuleList","ComposeRuleList","createApiClientHttp","errorCode","RulesClass","ConditionRule","props","console","log","apiClientHttp","enteredError","SetError","UUID","uuid","storeID","list","changeList","toAdd","ruleID","push","filter","rule","confirmHandler","combineAndMap","sendRulesResponse","sendRules","errorMsg","get","onRule","ifRule","SetIfRule","ifRuleChangeHandler","event","target","value","thenRule","SetThenRule","thenRuleChangeHandler"],"sources":["C:/Users/lielk/Documents/GitHub/Market/Front End/my-app/src/components/BuyingPolicy/ComposeRules/ConditionRule.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport RuleList from \"../RuleList\";\r\nimport ComposeRuleList from \"./ComposeRuleList\";\r\nimport \"./ConditionRule.css\";\r\nimport createApiClientHttp from \"../../../client/clientHttp.js\";\r\nimport {errorCode} from \"../../../ErrorCodeGui\"\r\nimport * as RulesClass  from \"../../RulesHelperClasses/BuyingRules\"\r\n\r\nconst ConditionRule = (props) => {\r\n    console.log(\"ConditionRule\")\r\n    const apiClientHttp = createApiClientHttp();\r\n    const [enteredError, SetError] = useState(\"\");\r\n\r\n    let UUID = props.uuid;\r\n  let storeID = props.storeID;\r\n  let list = [];\r\n\r\n  const changeList = (toAdd, ruleID) => {\r\n    if (toAdd) {\r\n      //console.log(\"add rule #\" + ruleID);\r\n      list.push(ruleID);\r\n    } else {\r\n      //console.log(\"remove rule #\" + ruleID);\r\n      list = list.filter((rule) => rule != ruleID);\r\n    }\r\n  };\r\n\r\n  //todo: create rule\r\n    async function confirmHandler(){\r\n        let combineAndMap ={\"combineCondition\":list}\r\n        const sendRulesResponse = await apiClientHttp.sendRules(combineAndMap);\r\n\r\n        if (sendRulesResponse.errorMsg !== -1) {\r\n            SetError(errorCode.get(sendRulesResponse.errorMsg))\r\n        } else {\r\n            // props.onRule(sendRulesResponse.value);\r\n            props.onRule();\r\n        }\r\n  }\r\n\r\n  const [ifRule, SetIfRule] = useState(\"\");\r\n  const ifRuleChangeHandler = (event) => {\r\n    SetIfRule(event.target.value);\r\n  };\r\n  const [thenRule, SetThenRule] = useState(\"\");\r\n  const thenRuleChangeHandler = (event) => {\r\n    SetThenRule(event.target.value);\r\n  };\r\n\r\n\r\n  //const [command, setCommand] = useState();\r\n  return (\r\n    <div className=\"condition\">\r\n      <h3>Condition Rule</h3>\r\n      <h2>if Rule #</h2>\r\n      <input\r\n              type=\"number\"\r\n              value={ifRule}\r\n              onChange={ifRuleChangeHandler}\r\n            />\r\n      <h2>happened ,then Rule #</h2>\r\n      <input\r\n              type=\"number\"\r\n              value={thenRule}\r\n              onChange={thenRuleChangeHandler}\r\n            />\r\n       <h2> happens, when you finish press</h2>\r\n      <button onClick={confirmHandler}>Confirm</button>\r\n      <div>\r\n        <ComposeRuleList\r\n          uuid={UUID}\r\n          storeID={storeID}\r\n          onChangeList={changeList}\r\n          checkbox={false}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConditionRule;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}