{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lielk\\\\Documents\\\\GitHub\\\\Market\\\\Front End\\\\my-app\\\\src\\\\components\\\\Product\\\\ProductInStore.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport createApiClientHttp from \"../../client/clientHttp.js\";\nimport { errorCode } from \"../../ErrorCodeGui\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductInStore = props => {\n  _s();\n\n  console.log(\"ProductInStore\");\n  const apiClientHttp = createApiClientHttp();\n  const [enteredError, SetError] = useState(\"\");\n  const [add, setAdd] = useState(\"\");\n  let UUID = props.UUID;\n  let productID = props.id;\n  let storeID = props.storeID;\n  let productName = props.name; //      <ProductInStore id={expense.id} UUID={props.uuid} storeID={props.storeID} />\n  //      <ProductInStore id={expense.id} UUID={props.uuid} storeID={props.storeID} name={expense.name} />\n  //    //str. {\"errorMsg\":-1,\"value\":[{\"quantity\":10,\"price\":10,\"itemID\":1,\"name\":null}]}\n  //todo get the info\n\n  let name = \"productID: \" + props.id;\n  let price = props.price;\n  let quantity = props.quantity; // let max = \"100\";\n\n  const changeAmountHandler = event => {\n    setAdd(event.target.value);\n  }; //todo: add to cart!\n  //        addProductToShoppingBag :async (uuid,storeid,productid,quantity)=>{\n\n\n  async function clickHandler() {\n    console.log(\"UUID    \" + UUID, 'storeID', storeID, 'productID', productID, 'quantity', quantity);\n    const addProductToShoppingBagResponse = await apiClientHttp.addProductToShoppingBag(UUID, storeID, productID, quantity);\n\n    if (addProductToShoppingBagResponse.errorMsg !== -1) {\n      SetError(errorCode.get(addProductToShoppingBagResponse.errorMsg));\n    } else {\n      let str = JSON.stringify(addProductToShoppingBagResponse);\n      console.log(\"addProductToShoppingBagResponse    \" + str);\n      setAdd(\"\");\n      SetError(\"\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"product-item\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-item__description\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'black',\n            position: 'relative',\n            background: '#c51244',\n            fontSize: 15\n          },\n          children: enteredError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Price: $\", price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"quantity: \", quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar__control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: add,\n            placeholder: \"amount\",\n            onChange: changeAmountHandler,\n            min: \"0\" // max={max}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clickHandler,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductInStore, \"2RHdWCJG2SnWm0IeQZ6vZ4bbZuU=\");\n\n_c = ProductInStore;\nexport default ProductInStore;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductInStore\");","map":{"version":3,"names":["React","useState","Card","createApiClientHttp","errorCode","ProductInStore","props","console","log","apiClientHttp","enteredError","SetError","add","setAdd","UUID","productID","id","storeID","productName","name","price","quantity","changeAmountHandler","event","target","value","clickHandler","addProductToShoppingBagResponse","addProductToShoppingBag","errorMsg","get","str","JSON","stringify","color","position","background","fontSize"],"sources":["C:/Users/lielk/Documents/GitHub/Market/Front End/my-app/src/components/Product/ProductInStore.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport createApiClientHttp from \"../../client/clientHttp.js\";\r\nimport {errorCode} from \"../../ErrorCodeGui\"\r\n\r\nconst ProductInStore = (props) => {\r\n  console.log(\"ProductInStore\")\r\n  const apiClientHttp = createApiClientHttp();\r\n  const [enteredError, SetError] = useState(\"\");\r\n\r\n  const [add, setAdd] = useState(\"\");\r\n  let UUID = props.UUID;\r\n  let productID = props.id;\r\n  let storeID = props.storeID;\r\n  let productName = props.name;\r\n\r\n//      <ProductInStore id={expense.id} UUID={props.uuid} storeID={props.storeID} />\r\n  //      <ProductInStore id={expense.id} UUID={props.uuid} storeID={props.storeID} name={expense.name} />\r\n  //    //str. {\"errorMsg\":-1,\"value\":[{\"quantity\":10,\"price\":10,\"itemID\":1,\"name\":null}]}\r\n  //todo get the info\r\n  let name = \"productID: \"+props.id;\r\n  let price =props.price;\r\n  let quantity=props.quantity;\r\n  // let max = \"100\";\r\n\r\n  const changeAmountHandler = (event) => {\r\n    setAdd(event.target.value);\r\n  };\r\n\r\n  //todo: add to cart!\r\n  //        addProductToShoppingBag :async (uuid,storeid,productid,quantity)=>{\r\n  async function clickHandler() {\r\n    console.log(\"UUID    \"+UUID,'storeID',storeID,'productID',productID,'quantity',quantity)\r\n\r\n    const addProductToShoppingBagResponse = await apiClientHttp.addProductToShoppingBag(UUID, storeID, productID,quantity);\r\n    if (addProductToShoppingBagResponse.errorMsg !== -1) {\r\n      SetError(errorCode.get(addProductToShoppingBagResponse.errorMsg))\r\n    } else {\r\n      let str = JSON.stringify(addProductToShoppingBagResponse);\r\n      console.log(\"addProductToShoppingBagResponse    \"+str)\r\n      setAdd(\"\");\r\n      SetError(\"\")\r\n    }\r\n  }\r\n  return (\r\n    <li>\r\n      <Card className=\"product-item\">\r\n        <div className=\"product-item__description\">\r\n          <div style={{ color: 'black',position: 'relative',background: '#c51244',fontSize: 15 }}>{enteredError}</div>\r\n\r\n          <h2>{name}</h2>\r\n          <h2>Price: ${price}</h2>\r\n          <h2>quantity: {quantity}</h2>\r\n          <div className=\"bar__control\">\r\n            <input\r\n              type=\"number\"\r\n              value={add}\r\n              placeholder=\"amount\"\r\n              onChange={changeAmountHandler}\r\n              min=\"0\"\r\n              // max={max}\r\n            />\r\n          </div>\r\n          <button onClick={clickHandler}>Add</button>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ProductInStore;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}