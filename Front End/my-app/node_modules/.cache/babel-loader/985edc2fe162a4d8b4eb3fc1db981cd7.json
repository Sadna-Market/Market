{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lielk\\\\Documents\\\\GitHub\\\\Market\\\\Front End\\\\my-app\\\\src\\\\components\\\\BuyingPolicy\\\\SimpleCompose\\\\AddRule.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddSimpleRule from \"../AddSimpleRule\";\nimport ComposeRuleList from \"../ComposeRules/ComposeRuleList\";\nimport MoreRule from \"./MoreRule\";\nimport { errorCode } from \"../../../ErrorCodeGui\";\nimport * as RulesClass from \"../../RulesHelperClasses/BuyingRules\";\nimport createApiClientHttp from \"../../../client/clientHttp.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddRule = props => {\n  _s();\n\n  console.log(\"buying policy \" + \"AddRule \");\n  const apiClientHttp = createApiClientHttp();\n  const [enteredError, SetError] = useState(\"\");\n  let UUID = props.uuid;\n  let storeID = props.storeID;\n  let list = []; //check if it not apeend twhene its doesnt need to \n\n  const newRule = num => {\n    setComaand( /*#__PURE__*/_jsxDEV(AddSimpleRule, {\n      uuid: UUID,\n      storeID: storeID,\n      onRule: moreHandler,\n      compose: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this));\n  }; //todo: create Add with list\n\n\n  async function finishHandler() {\n    let andMap = {\n      \"and\": list\n    };\n    const sendRulesResponse = await apiClientHttp.addNewBuyRule(UUID, storeID, {\n      andMap\n    });\n\n    if (sendRulesResponse.errorMsg !== -1) {\n      SetError(errorCode.get(sendRulesResponse.errorMsg));\n    } else {\n      // props.onRule(sendRulesResponse.value);\n      props.onRule();\n    }\n  }\n\n  const moreHandler = ruleID => {\n    list.push(ruleID);\n    console.log(list);\n    setComaand( /*#__PURE__*/_jsxDEV(MoreRule, {\n      onMore: newRule,\n      onFinish: finishHandler,\n      compose: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this));\n  };\n\n  const [command, setComaand] = useState( /*#__PURE__*/_jsxDEV(AddSimpleRule, {\n    uuid: UUID,\n    storeID: storeID,\n    onRule: moreHandler,\n    compose: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this)); //todo: AddRule\n\n  const confirmHandler = () => {\n    //do..... with the list\n    // props.onRule();\n    setComaand( /*#__PURE__*/_jsxDEV(AddSimpleRule, {\n      uuid: UUID,\n      storeID: storeID,\n      onRule: newRule,\n      compose: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this));\n  }; //const [command, setCommand] = useState();\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: command\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddRule, \"J25A+fmUdZoSZJR0AQ5k5LiJOd8=\");\n\n_c = AddRule;\nexport default AddRule;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRule\");","map":{"version":3,"names":["React","useState","AddSimpleRule","ComposeRuleList","MoreRule","errorCode","RulesClass","createApiClientHttp","AddRule","props","console","log","apiClientHttp","enteredError","SetError","UUID","uuid","storeID","list","newRule","num","setComaand","moreHandler","finishHandler","andMap","sendRulesResponse","addNewBuyRule","errorMsg","get","onRule","ruleID","push","command","confirmHandler"],"sources":["C:/Users/lielk/Documents/GitHub/Market/Front End/my-app/src/components/BuyingPolicy/SimpleCompose/AddRule.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport AddSimpleRule from \"../AddSimpleRule\";\r\nimport ComposeRuleList from \"../ComposeRules/ComposeRuleList\";\r\nimport MoreRule from \"./MoreRule\";\r\nimport {errorCode} from \"../../../ErrorCodeGui\"\r\nimport * as RulesClass  from \"../../RulesHelperClasses/BuyingRules\"\r\nimport createApiClientHttp from \"../../../client/clientHttp.js\";\r\n\r\nconst AddRule = (props) => {\r\n  console.log(\"buying policy \" + \"AddRule \")\r\n  const apiClientHttp = createApiClientHttp();\r\n  const [enteredError, SetError] = useState(\"\");\r\n  let UUID = props.uuid;\r\n  let storeID = props.storeID;\r\n  let list = [];//check if it not apeend twhene its doesnt need to \r\n\r\n  const newRule = (num) => {\r\n\r\n    setComaand(\r\n      <AddSimpleRule uuid={UUID} storeID={storeID} onRule={moreHandler} compose={true}/>\r\n    );\r\n  };\r\n\r\n  //todo: create Add with list\r\n  async function  finishHandler(){\r\n    let andMap ={\"and\":list}\r\n      const sendRulesResponse = await apiClientHttp.addNewBuyRule(UUID,storeID, {andMap});\r\n\r\n      if (sendRulesResponse.errorMsg !== -1) {\r\n        SetError(errorCode.get(sendRulesResponse.errorMsg))\r\n      } else {\r\n        // props.onRule(sendRulesResponse.value);\r\n        props.onRule();\r\n      }\r\n\r\n  }\r\n\r\n  const moreHandler = (ruleID) => {\r\n    list.push(ruleID);\r\n    console.log(list);\r\n    setComaand(<MoreRule onMore={newRule} onFinish={finishHandler} compose={true}/>);\r\n\r\n  };\r\n\r\n  const [command, setComaand] = useState(\r\n    <AddSimpleRule uuid={UUID} storeID={storeID} onRule={moreHandler} compose={true}/>\r\n  );\r\n\r\n  //todo: AddRule\r\n  const confirmHandler = () => {\r\n    //do..... with the list\r\n    // props.onRule();\r\n    setComaand(\r\n      <AddSimpleRule uuid={UUID} storeID={storeID} onRule={newRule} compose={true} />\r\n    );\r\n  };\r\n\r\n  //const [command, setCommand] = useState();\r\n  return (\r\n    <div>\r\n      <h3>Add Rule</h3>\r\n      <div>{command}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddRule;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,SAAR,QAAwB,uBAAxB;AACA,OAAO,KAAKC,UAAZ,MAA6B,sCAA7B;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EACzBC,OAAO,CAACC,GAAR,CAAY,mBAAmB,UAA/B;EACA,MAAMC,aAAa,GAAGL,mBAAmB,EAAzC;EACA,MAAM,CAACM,YAAD,EAAeC,QAAf,IAA2Bb,QAAQ,CAAC,EAAD,CAAzC;EACA,IAAIc,IAAI,GAAGN,KAAK,CAACO,IAAjB;EACA,IAAIC,OAAO,GAAGR,KAAK,CAACQ,OAApB;EACA,IAAIC,IAAI,GAAG,EAAX,CANyB,CAMX;;EAEd,MAAMC,OAAO,GAAIC,GAAD,IAAS;IAEvBC,UAAU,eACR,QAAC,aAAD;MAAe,IAAI,EAAEN,IAArB;MAA2B,OAAO,EAAEE,OAApC;MAA6C,MAAM,EAAEK,WAArD;MAAkE,OAAO,EAAE;IAA3E;MAAA;MAAA;MAAA;IAAA,QADQ,CAAV;EAGD,CALD,CARyB,CAezB;;;EACA,eAAgBC,aAAhB,GAA+B;IAC7B,IAAIC,MAAM,GAAE;MAAC,OAAMN;IAAP,CAAZ;IACE,MAAMO,iBAAiB,GAAG,MAAMb,aAAa,CAACc,aAAd,CAA4BX,IAA5B,EAAiCE,OAAjC,EAA0C;MAACO;IAAD,CAA1C,CAAhC;;IAEA,IAAIC,iBAAiB,CAACE,QAAlB,KAA+B,CAAC,CAApC,EAAuC;MACrCb,QAAQ,CAACT,SAAS,CAACuB,GAAV,CAAcH,iBAAiB,CAACE,QAAhC,CAAD,CAAR;IACD,CAFD,MAEO;MACL;MACAlB,KAAK,CAACoB,MAAN;IACD;EAEJ;;EAED,MAAMP,WAAW,GAAIQ,MAAD,IAAY;IAC9BZ,IAAI,CAACa,IAAL,CAAUD,MAAV;IACApB,OAAO,CAACC,GAAR,CAAYO,IAAZ;IACAG,UAAU,eAAC,QAAC,QAAD;MAAU,MAAM,EAAEF,OAAlB;MAA2B,QAAQ,EAAEI,aAArC;MAAoD,OAAO,EAAE;IAA7D;MAAA;MAAA;MAAA;IAAA,QAAD,CAAV;EAED,CALD;;EAOA,MAAM,CAACS,OAAD,EAAUX,UAAV,IAAwBpB,QAAQ,eACpC,QAAC,aAAD;IAAe,IAAI,EAAEc,IAArB;IAA2B,OAAO,EAAEE,OAApC;IAA6C,MAAM,EAAEK,WAArD;IAAkE,OAAO,EAAE;EAA3E;IAAA;IAAA;IAAA;EAAA,QADoC,CAAtC,CApCyB,CAwCzB;;EACA,MAAMW,cAAc,GAAG,MAAM;IAC3B;IACA;IACAZ,UAAU,eACR,QAAC,aAAD;MAAe,IAAI,EAAEN,IAArB;MAA2B,OAAO,EAAEE,OAApC;MAA6C,MAAM,EAAEE,OAArD;MAA8D,OAAO,EAAE;IAAvE;MAAA;MAAA;MAAA;IAAA,QADQ,CAAV;EAGD,CAND,CAzCyB,CAiDzB;;;EACA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAMa;IAAN;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAxDD;;GAAMxB,O;;KAAAA,O;AA0DN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}