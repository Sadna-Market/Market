{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lielk\\\\Documents\\\\GitHub\\\\Market\\\\Front End\\\\my-app\\\\src\\\\components\\\\Store\\\\BID\\\\Options.js\";\nimport React, { useState } from \"react\";\nimport Offer from \"./Offer\";\nimport Option from \"./Option\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Options = props => {\n  let UUID = props.uuid;\n  let storeID = props.storeID; //todo: get all my products\n\n  let offers = [{\n    name: \"Yaki@gail.com\",\n    offer: 20\n  }, {\n    name: \"Niv@gail.com\",\n    offer: 550\n  }, {\n    name: \"Liel@gail.com\",\n    offer: 320\n  }, {\n    name: \"Dor@gail.com\",\n    offer: 220\n  }, {\n    name: \"Daniel@gail.com\",\n    offer: 220\n  }];\n  offers = offers.slice(0, props.offers);\n  let productIDs = offers.map(expense => /*#__PURE__*/_jsxDEV(Option, {\n    name: expense.name,\n    offer: expense.offer,\n    uuid: UUID,\n    storeID: storeID\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"products-list\",\n      children: productIDs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Options;\nexport default Options;\n\nvar _c;\n\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"names":["React","useState","Offer","Option","Options","props","UUID","uuid","storeID","offers","name","offer","slice","productIDs","map","expense"],"sources":["C:/Users/lielk/Documents/GitHub/Market/Front End/my-app/src/components/Store/BID/Options.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport Offer from \"./Offer\";\r\nimport Option from \"./Option\";\r\n\r\nconst Options = (props) => {\r\n  let UUID = props.uuid;\r\n  let storeID = props.storeID;\r\n  //todo: get all my products\r\n  let offers = [\r\n    { name: \"Yaki@gail.com\", offer: 20 },\r\n    { name: \"Niv@gail.com\", offer: 550 },\r\n    { name: \"Liel@gail.com\", offer: 320 },\r\n    { name: \"Dor@gail.com\", offer: 220 },\r\n    { name: \"Daniel@gail.com\", offer: 220 },\r\n  ];\r\n\r\n  offers = offers.slice(0, props.offers);\r\n\r\n  let productIDs = offers.map((expense) => (\r\n    <Option\r\n      name={expense.name}\r\n      offer={expense.offer}\r\n      uuid={UUID}\r\n      storeID={storeID}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"products-list\">{productIDs}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EACzB,IAAIC,IAAI,GAAGD,KAAK,CAACE,IAAjB;EACA,IAAIC,OAAO,GAAGH,KAAK,CAACG,OAApB,CAFyB,CAGzB;;EACA,IAAIC,MAAM,GAAG,CACX;IAAEC,IAAI,EAAE,eAAR;IAAyBC,KAAK,EAAE;EAAhC,CADW,EAEX;IAAED,IAAI,EAAE,cAAR;IAAwBC,KAAK,EAAE;EAA/B,CAFW,EAGX;IAAED,IAAI,EAAE,eAAR;IAAyBC,KAAK,EAAE;EAAhC,CAHW,EAIX;IAAED,IAAI,EAAE,cAAR;IAAwBC,KAAK,EAAE;EAA/B,CAJW,EAKX;IAAED,IAAI,EAAE,iBAAR;IAA2BC,KAAK,EAAE;EAAlC,CALW,CAAb;EAQAF,MAAM,GAAGA,MAAM,CAACG,KAAP,CAAa,CAAb,EAAgBP,KAAK,CAACI,MAAtB,CAAT;EAEA,IAAII,UAAU,GAAGJ,MAAM,CAACK,GAAP,CAAYC,OAAD,iBAC1B,QAAC,MAAD;IACE,IAAI,EAAEA,OAAO,CAACL,IADhB;IAEE,KAAK,EAAEK,OAAO,CAACJ,KAFjB;IAGE,IAAI,EAAEL,IAHR;IAIE,OAAO,EAAEE;EAJX;IAAA;IAAA;IAAA;EAAA,QADe,CAAjB;EASA,oBACE;IAAA,uBACE;MAAI,SAAS,EAAC,eAAd;MAAA,UAA+BK;IAA/B;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA5BD;;KAAMT,O;AA8BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}