{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lielk\\\\Documents\\\\GitHub\\\\Market\\\\Front End\\\\my-app\\\\src\\\\components\\\\Manager\\\\UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport StoreID from \"../Store/StoreID\";\nimport UserID from \"./UserID\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = props => {\n  _s();\n\n  console.log(\"UserList\");\n  const [enteredusers, Setusers] = useState([]);\n  console.log(\"StoreList\");\n\n  async function getAllUsers() {\n    let users = [];\n    const getAllUsersInTheSystemResponse = await apiClientHttp.getAllUsersInTheSystem(props.uuid);\n\n    if (getAllUsersInTheSystemResponse.errorMsg !== -1) {\n      SetError(errorCode.get(getAllUsersInTheSystemResponse.errorMsg));\n    } else {\n      for (let i = 0; i < getAllUsersInTheSystemResponse.value.length; i++) {\n        users.push({\n          State: getAllStoresResponse.value[i].storeId,\n          email: getAllStoresResponse.value[i].email\n        });\n      }\n\n      SetError(\"\");\n      Setusers(users);\n    }\n  }\n\n  useEffect(() => {\n    getAllUsers();\n  }, [enteredusers.refresh]);\n  let users = [{\n    email: \"a@gmail.com\",\n    State: \"Connect\"\n  }, {\n    email: \"b@gmail.com\",\n    State: \"Disconnect\"\n  }, {\n    email: \"c@gmail.com\",\n    State: \"Connect\"\n  }, {\n    email: \"d@gmail.com\",\n    State: \"Connect\"\n  }, {\n    email: \"e@gmail.com\",\n    State: \"Disconnect\"\n  }, {\n    email: \"h@gmail.com\",\n    State: \"Disconnect\"\n  }, {\n    email: \"e@gmail.com\",\n    State: \"Disconnect\"\n  }];\n\n  if (users.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"stores-list__fallback\",\n      children: \"Found No Stores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (props.search != \"\") {\n    users = users.filter(user => user.email === props.search);\n  }\n\n  const enterToStoreHandler = storeID => {\n    props.onEnterToStore(storeID);\n  };\n\n  let expensesContent = users.map(expense => /*#__PURE__*/_jsxDEV(UserID, {\n    email: expense.email,\n    state: expense.State,\n    onEnterToStore: enterToStoreHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this)); //const [searchStore, setStore] = useState(\"\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"stores-list\",\n      children: expensesContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"zhW5un5VK9qqCilbL62oGXjopRM=\");\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","useEffect","StoreID","UserID","UserList","props","console","log","enteredusers","Setusers","getAllUsers","users","getAllUsersInTheSystemResponse","apiClientHttp","getAllUsersInTheSystem","uuid","errorMsg","SetError","errorCode","get","i","value","length","push","State","getAllStoresResponse","storeId","email","refresh","search","filter","user","enterToStoreHandler","storeID","onEnterToStore","expensesContent","map","expense"],"sources":["C:/Users/lielk/Documents/GitHub/Market/Front End/my-app/src/components/Manager/UserList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport StoreID from \"../Store/StoreID\";\r\nimport UserID from \"./UserID\";\r\n\r\nconst UserList = (props) => {\r\n  console.log(\"UserList\")\r\n\r\n\r\n  const [enteredusers, Setusers] = useState([]);\r\n\r\n  console.log(\"StoreList\")\r\n\r\n  async function getAllUsers() {\r\n    let users = [];\r\n\r\n    const getAllUsersInTheSystemResponse = await apiClientHttp.getAllUsersInTheSystem(props.uuid);\r\n\r\n    if (getAllUsersInTheSystemResponse.errorMsg !== -1) {\r\n      SetError(errorCode.get(getAllUsersInTheSystemResponse.errorMsg))\r\n    } else {\r\n      for (let i = 0; i < getAllUsersInTheSystemResponse.value.length; i++) {\r\n      users.push({\r\n          State: getAllStoresResponse.value[i].storeId,\r\n           email: getAllStoresResponse.value[i].email,\r\n        })\r\n\r\n      }\r\n      SetError(\"\")\r\n    Setusers(users);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n      getAllUsers();\r\n  }, [enteredusers.refresh]);\r\n\r\n  let users = [\r\n    { email: \"a@gmail.com\", State: \"Connect\" },\r\n    { email: \"b@gmail.com\", State: \"Disconnect\" },\r\n    { email: \"c@gmail.com\", State: \"Connect\" },\r\n    { email: \"d@gmail.com\", State: \"Connect\" },\r\n    { email: \"e@gmail.com\", State: \"Disconnect\" },\r\n    { email: \"h@gmail.com\", State: \"Disconnect\" },\r\n    { email: \"e@gmail.com\", State: \"Disconnect\" },\r\n  ];\r\n  if (users.length === 0) {\r\n    return <h2 className=\"stores-list__fallback\">Found No Stores</h2>;\r\n  }\r\n\r\n  if (props.search != \"\") {\r\n    users = users.filter((user) => user.email === props.search);\r\n  }\r\n\r\n  const enterToStoreHandler = (storeID) => {\r\n    props.onEnterToStore(storeID);\r\n  };\r\n\r\n  let expensesContent = users.map((expense) => (\r\n    <UserID\r\n      email={expense.email}\r\n      state={expense.State}\r\n      onEnterToStore={enterToStoreHandler}\r\n    />\r\n  ));\r\n\r\n  //const [searchStore, setStore] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"stores-list\">{expensesContent}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}