{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lielk\\\\Documents\\\\GitHub\\\\Market\\\\Front End\\\\my-app\\\\src\\\\components\\\\BuyingPolicy\\\\SimpleCompose\\\\ConditionRule.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddSimpleRule from \"../AddSimpleRule\";\nimport ComposeRuleList from \"../ComposeRules/ComposeRuleList\";\nimport RuleID from \"../RuleID\";\nimport RuleInfo from \"../RuleInfo\";\nimport MoreRule from \"./MoreRule\";\nimport { errorCode } from \"../../../ErrorCodeGui\";\nimport * as RulesClass from \"../../RulesHelperClasses/BuyingRules\";\nimport createApiClientHttp from \"../../../client/clientHttp.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConditionRule = props => {\n  _s();\n\n  console.log(\"buying policy \" + \"ConditionRule \");\n  const apiClientHttp = createApiClientHttp();\n  const [enteredError, SetError] = useState(\"\");\n  let UUID = props.uuid;\n  let storeID = props.storeID;\n  const [ifRule, setIfRule] = useState(\"\");\n  const [ThenRule, setThenRule] = useState(\"\");\n  const [confirm, setconfirm] = useState(\"\");\n\n  const newRule = num => {// setComaand(\n    //   <AddSimpleRule uuid={UUID} storeID={storeID} onRule={moreHandler} />\n    // );\n  }; //todo: create Add with list\n\n\n  async function finishHandler() {\n    let list = [];\n    list.push(ifRule);\n    list.push(ThenRule);\n    let andMap = {\n      \"condition\": list\n    };\n    const sendRulesResponse = await apiClientHttp.addNewBuyRule(andMap);\n\n    if (sendRulesResponse.errorMsg !== -1) {\n      SetError(errorCode.get(sendRulesResponse.errorMsg));\n    } else {\n      // props.onRule(sendRulesResponse.value);\n      props.onRule();\n    }\n  }\n\n  const showHandler1 = ruleID => {\n    setCommand1( /*#__PURE__*/_jsxDEV(RuleInfo, {\n      ruleID: ruleID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this));\n    setIfRule(ruleID);\n  };\n\n  const showHandler2 = ruleID => {\n    setCommand2( /*#__PURE__*/_jsxDEV(RuleInfo, {\n      ruleID: ruleID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this));\n    setThenRule(ruleID);\n  }; //todo conditionRule\n\n\n  const confirmHandler = () => {\n    //return onRule(<ruleID>)\n    props.onRule(15);\n  };\n\n  const [command1, setCommand1] = useState( /*#__PURE__*/_jsxDEV(AddSimpleRule, {\n    uuid: UUID,\n    storeID: storeID,\n    onRule: showHandler1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this));\n  const [command2, setCommand2] = useState( /*#__PURE__*/_jsxDEV(AddSimpleRule, {\n    uuid: UUID,\n    storeID: storeID,\n    onRule: showHandler2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this)); //const [command, setCommand] = useState();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Condition Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"when you finish, Press\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: confirmHandler,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"create Simple Rule for if:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: command1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"create Simple Rule for then:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: command2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConditionRule, \"vcLNQeUv8kQuiBkZdCCGu+sfxJs=\");\n\n_c = ConditionRule;\nexport default ConditionRule;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConditionRule\");","map":{"version":3,"names":["React","useState","AddSimpleRule","ComposeRuleList","RuleID","RuleInfo","MoreRule","errorCode","RulesClass","createApiClientHttp","ConditionRule","props","console","log","apiClientHttp","enteredError","SetError","UUID","uuid","storeID","ifRule","setIfRule","ThenRule","setThenRule","confirm","setconfirm","newRule","num","finishHandler","list","push","andMap","sendRulesResponse","addNewBuyRule","errorMsg","get","onRule","showHandler1","ruleID","setCommand1","showHandler2","setCommand2","confirmHandler","command1","command2"],"sources":["C:/Users/lielk/Documents/GitHub/Market/Front End/my-app/src/components/BuyingPolicy/SimpleCompose/ConditionRule.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport AddSimpleRule from \"../AddSimpleRule\";\r\nimport ComposeRuleList from \"../ComposeRules/ComposeRuleList\";\r\nimport RuleID from \"../RuleID\";\r\nimport RuleInfo from \"../RuleInfo\";\r\nimport MoreRule from \"./MoreRule\";\r\nimport {errorCode} from \"../../../ErrorCodeGui\"\r\nimport * as RulesClass  from \"../../RulesHelperClasses/BuyingRules\"\r\nimport createApiClientHttp from \"../../../client/clientHttp.js\";\r\n\r\nconst ConditionRule = (props) => {\r\n  console.log(\"buying policy \" + \"ConditionRule \")\r\n  const apiClientHttp = createApiClientHttp();\r\n  const [enteredError, SetError] = useState(\"\");\r\n  let UUID = props.uuid;\r\n  let storeID = props.storeID;\r\n\r\n  const [ifRule, setIfRule] = useState(\"\");\r\n  const [ThenRule, setThenRule] = useState(\"\");\r\n  const [confirm, setconfirm] = useState(\"\");\r\n\r\n  const newRule = (num) => {\r\n    // setComaand(\r\n    //   <AddSimpleRule uuid={UUID} storeID={storeID} onRule={moreHandler} />\r\n    // );\r\n  };\r\n\r\n  //todo: create Add with list\r\n  async function finishHandler() {\r\n    let list=[];\r\n    list.push(ifRule)\r\n    list.push(ThenRule)\r\n    let andMap ={\"condition\":list}\r\n    const sendRulesResponse = await apiClientHttp.addNewBuyRule(andMap);\r\n\r\n    if (sendRulesResponse.errorMsg !== -1) {\r\n      SetError(errorCode.get(sendRulesResponse.errorMsg))\r\n    } else {\r\n      // props.onRule(sendRulesResponse.value);\r\n      props.onRule();\r\n    }\r\n  }\r\n\r\n  const showHandler1 = (ruleID) => {\r\n    setCommand1(<RuleInfo ruleID={ruleID} />);\r\n    setIfRule(ruleID);\r\n  };\r\n\r\n  const showHandler2 = (ruleID) => {\r\n    setCommand2(<RuleInfo ruleID={ruleID} />);\r\n    setThenRule(ruleID);\r\n  };\r\n\r\n  //todo conditionRule\r\n  const confirmHandler = () => {\r\n    //return onRule(<ruleID>)\r\n    props.onRule(15);\r\n  };\r\n\r\n  const [command1, setCommand1] = useState(\r\n    <AddSimpleRule uuid={UUID} storeID={storeID} onRule={showHandler1} />\r\n  );\r\n\r\n  const [command2, setCommand2] = useState(\r\n    <AddSimpleRule uuid={UUID} storeID={storeID} onRule={showHandler2} />\r\n  );\r\n\r\n  //const [command, setCommand] = useState();\r\n  return (\r\n    <div>\r\n      <h3>Condition Rule</h3>\r\n      <div>\r\n        <h2>when you finish, Press</h2>\r\n        <button onClick={confirmHandler}>Confirm</button>\r\n      </div>\r\n      <h2>create Simple Rule for if:</h2>\r\n      <div>{command1}</div>\r\n      <h2>create Simple Rule for then:</h2>\r\n      <div>{command2}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConditionRule;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}