{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lielk\\\\Documents\\\\GitHub\\\\Market\\\\Front End\\\\my-app\\\\src\\\\components\\\\Store\\\\BID\\\\MyBIDs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport BIDItem from \"./BIDItem\";\nimport Offer from \"./Offer\";\nimport Status from \"./Status\";\nimport createApiClientHttp from \"../../../client/clientHttp.js\";\nimport { errorCode } from \"../../../ErrorCodeGui\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyBIDs = props => {\n  _s();\n\n  console.log(\"MyBIDs\");\n  const apiClientHttp = createApiClientHttp();\n  const [enteredError, SetError] = useState(\"\");\n  let UUID = props.uuid;\n  let storeID = props.storeID; //todo: get all my products\n  //getMyBIDs\n\n  const [enteredBIDs, SetBIDs] = useState([]);\n\n  async function getAllBIDS() {\n    let Bids = [];\n    const getMyBIDsResponse = await apiClientHttp.getMyBIDs(UUID, storeID);\n    let str = JSON.stringify(getMyBIDsResponse);\n    console.log(\"getMyBIDsResponse    \" + str);\n\n    if (getMyBIDsResponse.errorMsg !== -1) {\n      SetError(errorCode.get(getMyBIDsResponse.errorMsg));\n    } else {\n      for (let i = 0; i < getMyBIDsResponse.value.length; i++) {\n        Bids.push({\n          id: getMyBIDsResponse.value[i].productID,\n          name: getMyBIDsResponse.value[i].productName,\n          amount: getMyBIDsResponse.value[i].quantity,\n          originPrice: getMyBIDsResponse.value[i].originPrice,\n          counterPrice: getMyBIDsResponse.value[i].counterPrice,\n          status: getMyBIDsResponse.value[i].status\n        });\n      }\n\n      console.log(\"Bids \" + Bids);\n      SetError(\"\");\n      SetBIDs(Bids);\n    }\n  }\n\n  useEffect(() => {\n    getAllBIDS();\n  }, [enteredBIDs.refresh]); // let products = [\n  //   { id: 1, name: \"Sony 5\", amount: 10, status: \"Waiting\" },\n  //   { id: 2, name: \"TV\", amount: 10, status: \"Rejected\" },\n  //   { id: 3, name: \"Car KIA RIO\", amount: 10, status: \"Counter\" },\n  //   { id: 4, name: \"AC/DC\", amount: 10, status: \"Approved\" },\n  //   { id: 5, name: \"MAMA Yokero\", amount: 10, status: \"Waiting\" },\n  //   { id: 6, name: \"Iphone 13\", amount: 10, status: \"bought\" },\n  // ];\n\n  let enteredBIDss = enteredBIDs.map(expense => /*#__PURE__*/_jsxDEV(Status, {\n    originPrice: expense.originPrice,\n    counterPrice: expense.counterPrice,\n    id: expense.id,\n    name: expense.name,\n    status: expense.status,\n    uuid: UUID,\n    storeID: storeID,\n    amount: expense.amount,\n    onConfirm: () => props.onConfirm(expense.id, expense.amount),\n    onChange: () => getAllBIDS\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"products-list\",\n        children: enteredBIDss\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyBIDs, \"Iw2b2cBmwb4NsnolLvAr9FF8J10=\");\n\n_c = MyBIDs;\nexport default MyBIDs;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyBIDs\");","map":{"version":3,"names":["React","useEffect","useState","BIDItem","Offer","Status","createApiClientHttp","errorCode","MyBIDs","props","console","log","apiClientHttp","enteredError","SetError","UUID","uuid","storeID","enteredBIDs","SetBIDs","getAllBIDS","Bids","getMyBIDsResponse","getMyBIDs","str","JSON","stringify","errorMsg","get","i","value","length","push","id","productID","name","productName","amount","quantity","originPrice","counterPrice","status","refresh","enteredBIDss","map","expense","onConfirm"],"sources":["C:/Users/lielk/Documents/GitHub/Market/Front End/my-app/src/components/Store/BID/MyBIDs.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport BIDItem from \"./BIDItem\";\r\nimport Offer from \"./Offer\";\r\nimport Status from \"./Status\";\r\nimport createApiClientHttp from \"../../../client/clientHttp.js\";\r\nimport {errorCode} from \"../../../ErrorCodeGui\"\r\n\r\nconst MyBIDs = (props) => {\r\n    console.log(\"MyBIDs\")\r\n    const apiClientHttp = createApiClientHttp();\r\n    const [enteredError, SetError] = useState(\"\");\r\n    let UUID = props.uuid;\r\n    let storeID = props.storeID;\r\n    //todo: get all my products\r\n    //getMyBIDs\r\n    const [enteredBIDs, SetBIDs] = useState([]);\r\n\r\n\r\n    async function getAllBIDS() {\r\n        let Bids = [];\r\n\r\n        const getMyBIDsResponse = await apiClientHttp.getMyBIDs(UUID, storeID);\r\n\r\n        let str = JSON.stringify(getMyBIDsResponse);\r\n        console.log(\"getMyBIDsResponse    \" + str)\r\n\r\n        if (getMyBIDsResponse.errorMsg !== -1) {\r\n            SetError(errorCode.get(getMyBIDsResponse.errorMsg))\r\n        } else {\r\n            for (let i = 0; i < getMyBIDsResponse.value.length; i++) {\r\n                Bids.push({\r\n                    id: getMyBIDsResponse.value[i].productID,\r\n                    name: getMyBIDsResponse.value[i].productName,\r\n                    amount: getMyBIDsResponse.value[i].quantity,\r\n                    originPrice: getMyBIDsResponse.value[i].originPrice,\r\n                    counterPrice: getMyBIDsResponse.value[i].counterPrice,\r\n                    status: getMyBIDsResponse.value[i].status,\r\n                })\r\n\r\n            }\r\n            console.log(\"Bids \" + Bids)\r\n            SetError(\"\")\r\n            SetBIDs(Bids);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllBIDS();\r\n    }, [enteredBIDs.refresh]);\r\n    // let products = [\r\n    //   { id: 1, name: \"Sony 5\", amount: 10, status: \"Waiting\" },\r\n    //   { id: 2, name: \"TV\", amount: 10, status: \"Rejected\" },\r\n    //   { id: 3, name: \"Car KIA RIO\", amount: 10, status: \"Counter\" },\r\n    //   { id: 4, name: \"AC/DC\", amount: 10, status: \"Approved\" },\r\n    //   { id: 5, name: \"MAMA Yokero\", amount: 10, status: \"Waiting\" },\r\n    //   { id: 6, name: \"Iphone 13\", amount: 10, status: \"bought\" },\r\n    // ];\r\n\r\n    let enteredBIDss = enteredBIDs.map((expense) => (\r\n        <Status\r\n            originPrice={expense.originPrice}\r\n            counterPrice={expense.counterPrice}\r\n            id={expense.id}\r\n            name={expense.name}\r\n            status={expense.status}\r\n            uuid={UUID}\r\n            storeID={storeID}\r\n            amount={expense.amount}\r\n            onConfirm={() => props.onConfirm(expense.id, expense.amount)}\r\n            onChange={() => getAllBIDS}\r\n\r\n        />\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <h3>Status</h3>\r\n            <div>\r\n                <ul className=\"products-list\">{enteredBIDss}</ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyBIDs;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}