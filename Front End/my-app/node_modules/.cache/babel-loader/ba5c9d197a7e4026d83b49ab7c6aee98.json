{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lielk\\\\Documents\\\\GitHub\\\\Market\\\\Front End\\\\my-app\\\\src\\\\components\\\\BuyingPolicy\\\\RuleList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport RuleID from \"./RuleID\";\nimport createApiClientHttp from \"../../client/clientHttp.js\";\nimport { errorCode } from \"../../ErrorCodeGui\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RuleList = props => {\n  _s();\n\n  const apiClientHttp = createApiClientHttp();\n  const [enteredError, SetError] = useState(\"\");\n  console.log(\"buying policy \" + \"RuleList \");\n  let UUID = props.uuid;\n  let storeID = props.storeID;\n  const [enteredrules, Setrules] = useState([]);\n  console.log(\"StoreList\");\n\n  async function getAllRules() {\n    let stores = [];\n    const getAllStoresResponse = await apiClientHttp.getAllStores();\n    console.log(\"start func  getAllStores\");\n\n    if (getAllStoresResponse.errorMsg !== -1) {\n      SetError(errorCode.get(getAllStoresResponse.errorMsg));\n    } else {\n      for (let i = 0; i < getAllStoresResponse.value.length; i++) {\n        stores.push({\n          id: getAllStoresResponse.value[i].storeId,\n          name: getAllStoresResponse.value[i].name,\n          open: getAllStoresResponse.value[i].isOpen\n        });\n      }\n\n      console.log(\"enteredrules \" + stores);\n      Setstores(stores);\n    }\n  }\n\n  useEffect(() => {\n    getAllRules();\n  }, [enteredrules.refresh]);\n  console.log(enteredrules);\n  console.log(enteredrules.length);\n  let rules = [{\n    id: 1,\n    kind: \"Add\"\n  }, {\n    id: 2,\n    kind: \"Simple\"\n  }, {\n    id: 3,\n    kind: \"condition\"\n  }, {\n    id: 4,\n    kind: \"Simple\"\n  }, {\n    id: 5,\n    kind: \"Or\"\n  }, {\n    id: 6,\n    kind: \"Or\"\n  }, {\n    id: 7,\n    kind: \"Simple\"\n  }];\n\n  if (enteredrules.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"stores-list__fallback\",\n      children: \"Found No Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  } //enteredrules\n\n\n  if (props.search != \"\") {\n    rules = rules.filter(rule => rule.id === parseInt(props.search));\n  } //todo: update the list\n\n\n  const removeRuleHandler = () => {};\n\n  const infoHandler = ruleID => {\n    props.onInfo(ruleID);\n  };\n\n  let expensesContent = enteredrules.map(expense => /*#__PURE__*/_jsxDEV(RuleID, {\n    ruleID: expense.id,\n    uuid: UUID,\n    storeID: storeID,\n    kind: expense.kind,\n    onRemove: removeRuleHandler,\n    onInfo: infoHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this)); //const [searchStore, setStore] = useState(\"\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"stores-list\",\n      children: expensesContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RuleList, \"7WsknNPryFYFMMZLi0TciB9vjvk=\");\n\n_c = RuleList;\nexport default RuleList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RuleList\");","map":{"version":3,"names":["React","useState","useEffect","RuleID","createApiClientHttp","errorCode","RuleList","props","apiClientHttp","enteredError","SetError","console","log","UUID","uuid","storeID","enteredrules","Setrules","getAllRules","stores","getAllStoresResponse","getAllStores","errorMsg","get","i","value","length","push","id","storeId","name","open","isOpen","Setstores","refresh","rules","kind","search","filter","rule","parseInt","removeRuleHandler","infoHandler","ruleID","onInfo","expensesContent","map","expense"],"sources":["C:/Users/lielk/Documents/GitHub/Market/Front End/my-app/src/components/BuyingPolicy/RuleList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport RuleID from \"./RuleID\";\r\nimport createApiClientHttp from \"../../client/clientHttp.js\";\r\nimport {errorCode} from \"../../ErrorCodeGui\"\r\nconst RuleList = (props) => {\r\n  const apiClientHttp = createApiClientHttp();\r\n  const [enteredError, SetError] = useState(\"\");\r\n  console.log(\"buying policy \" + \"RuleList \")\r\n\r\n  let UUID = props.uuid;\r\n  let storeID = props.storeID;\r\n\r\n  const [enteredrules, Setrules] = useState([]);\r\n\r\n  console.log(\"StoreList\")\r\n\r\n  async function getAllRules() {\r\n    let stores = [];\r\n\r\n    const getAllStoresResponse = await apiClientHttp.getAllStores();\r\n    console.log(\"start func  getAllStores\")\r\n\r\n    if (getAllStoresResponse.errorMsg !== -1) {\r\n      SetError(errorCode.get(getAllStoresResponse.errorMsg))\r\n    } else {\r\n      for (let i = 0; i < getAllStoresResponse.value.length; i++) {\r\n        stores.push({\r\n          id: getAllStoresResponse.value[i].storeId,\r\n          name: getAllStoresResponse.value[i].name,\r\n          open: getAllStoresResponse.value[i].isOpen\r\n        })\r\n\r\n      }\r\n      console.log(\"enteredrules \"+stores)\r\n\r\n      Setstores(stores);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllRules();\r\n  }, [enteredrules.refresh]);\r\n  console.log(enteredrules)\r\n  console.log(enteredrules.length)\r\n  let rules = [\r\n    { id: 1, kind: \"Add\" },\r\n    { id: 2, kind: \"Simple\" },\r\n    { id: 3, kind: \"condition\" },\r\n    { id: 4, kind: \"Simple\" },\r\n    { id: 5, kind: \"Or\" },\r\n    { id: 6, kind: \"Or\" },\r\n    { id: 7, kind: \"Simple\" },\r\n  ];\r\n  if (enteredrules.length === 0) {\r\n    return <h2 className=\"stores-list__fallback\">Found No Rule</h2>;\r\n  }\r\n//enteredrules\r\n  if (props.search != \"\") {\r\n    rules = rules.filter((rule) => rule.id === parseInt(props.search));\r\n  }\r\n\r\n  //todo: update the list\r\n  const removeRuleHandler = () => {};\r\n\r\n  const infoHandler = (ruleID) => {\r\n    props.onInfo(ruleID);\r\n  };\r\n\r\n  let expensesContent = enteredrules.map((expense) => (\r\n    <RuleID\r\n      ruleID={expense.id}\r\n      uuid={UUID}\r\n      storeID={storeID}\r\n      kind={expense.kind}\r\n      onRemove={removeRuleHandler}\r\n      onInfo={infoHandler}\r\n    />\r\n  ));\r\n\r\n  //const [searchStore, setStore] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"stores-list\">{expensesContent}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RuleList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}