{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lielk\\\\Documents\\\\GitHub\\\\Market\\\\Front End\\\\my-app\\\\src\\\\components\\\\Cart\\\\MyCart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport BuyCart from \"./BuyCart\";\nimport createApiClientHttp from \"../../client/clientHttp.js\";\nimport { errorCode } from \"../../ErrorCodeGui\";\nimport ProductInCart from \"../Product/ProductInCart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyCart = props => {\n  _s();\n\n  console.log(\"MyCart\");\n  const [Cartproducts, SetProducts] = useState([]);\n  const apiClientHttp = createApiClientHttp();\n  const [enteredError, SetError] = useState(\"\");\n  const [total, setTatal] = useState(0);\n  let UUID = props.uuid; //todo: get all my products\n  //getShoppingCart\n\n  async function getMyCart() {\n    let products = [];\n    const getShoppingCartResponse = await apiClientHttp.getShoppingCart(UUID);\n    console.log(\"start func getMyCart getShoppingCart\");\n    let str = JSON.stringify(getShoppingCartResponse);\n    console.log(\"sendRulesResponse    \" + str);\n\n    if (getShoppingCartResponse.errorMsg !== -1) {\n      SetError(errorCode.get(getShoppingCartResponse.errorMsg));\n    } else {\n      let shoppingBagHash = getShoppingCartResponse.value.shoppingBagHash;\n\n      for (const key in shoppingBagHash) {\n        //key = storeID\n        let store = JSON.stringify(shoppingBagHash[key].store); //{\"storeId\":1,\"name\":\"sys\",\"founder\":\"sysManager@gmail.com\",\"isOpen\":true,\"rate\":5}\n\n        let productQuantity = shoppingBagHash[key].productQuantity; //{1:20, 2:50} product id and quantity\n\n        for (const key in productQuantity) {\n          console.log(key);\n          console.log(productQuantity[key]);\n          products.push({\n            id: key,\n            // price: store.price,\n            price: -50,\n            amount: productQuantity[key] // name: getShoppingCartResponse.value[i].amount\n\n          });\n        }\n      }\n\n      let sum = 0;\n\n      for (let i = 0; i < products.length; i++) {\n        sum += products[i].price * products[i].amount;\n      }\n\n      setTatal(sum);\n      SetError(\"\");\n      SetProducts(products);\n    }\n  }\n\n  useEffect(() => {\n    getMyCart();\n  }, [Cartproducts.refresh]);\n\n  async function cancelHandler(price, storeid, productid) {\n    console.log(\"removeProductFromShoppingBagResponse   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ \"); // removeProductFromShoppingBag :async (uuid, storeid, productid) => {\n\n    const removeProductFromShoppingBagResponse = await apiClientHttp.removeProductFromShoppingBag(UUID, storeid, productid);\n    let str = JSON.stringify(removeProductFromShoppingBagResponse);\n    console.log(\"removeProductFromShoppingBagResponse    \" + str);\n\n    if (removeProductFromShoppingBagResponse.errorMsg !== -1) {\n      SetError(errorCode.get(removeProductFromShoppingBagResponse.errorMsg));\n    } else {\n      setTatal(total - price);\n    }\n  }\n\n  let productIDs = Cartproducts.map(expense => /*#__PURE__*/_jsxDEV(ProductInCart, {\n    id: expense.id // name={expense.name}\n    ,\n    amount: expense.amount,\n    price: expense.price,\n    onCancel: cancelHandler,\n    uuid: UUID\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this));\n  const [command, setCommand] = useState( /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this));\n\n  const buyHandler = () => {\n    setCommand( /*#__PURE__*/_jsxDEV(BuyCart, {\n      uuid: UUID,\n      onMarket: () => props.onMarket()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 20\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'black',\n        position: 'relative',\n        background: '#c51244',\n        fontSize: 15\n      },\n      children: enteredError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Total Price: $\", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: buyHandler,\n      children: \" Buy All The Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), command, /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"products-list\",\n      children: productIDs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyCart, \"CcTocKGyPCjdFCl1AUa/61zvujc=\");\n\n_c = MyCart;\nexport default MyCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyCart\");","map":{"version":3,"names":["React","useEffect","useState","BuyCart","createApiClientHttp","errorCode","ProductInCart","MyCart","props","console","log","Cartproducts","SetProducts","apiClientHttp","enteredError","SetError","total","setTatal","UUID","uuid","getMyCart","products","getShoppingCartResponse","getShoppingCart","str","JSON","stringify","errorMsg","get","shoppingBagHash","value","key","store","productQuantity","push","id","price","amount","sum","i","length","refresh","cancelHandler","storeid","productid","removeProductFromShoppingBagResponse","removeProductFromShoppingBag","productIDs","map","expense","command","setCommand","buyHandler","onMarket","color","position","background","fontSize"],"sources":["C:/Users/lielk/Documents/GitHub/Market/Front End/my-app/src/components/Cart/MyCart.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport BuyCart from \"./BuyCart\";\r\n\r\nimport createApiClientHttp from \"../../client/clientHttp.js\";\r\nimport {errorCode} from \"../../ErrorCodeGui\"\r\n\r\nimport ProductInCart from \"../Product/ProductInCart\";\r\n\r\nconst MyCart = (props) => {\r\n    console.log(\"MyCart\")\r\n    const [Cartproducts, SetProducts] = useState([]);\r\n    const apiClientHttp = createApiClientHttp();\r\n    const [enteredError, SetError] = useState(\"\");\r\n    const [total, setTatal] = useState(0);\r\n\r\n    let UUID = props.uuid;\r\n    //todo: get all my products\r\n    //getShoppingCart\r\n    async function getMyCart() {\r\n        let products = [];\r\n        const getShoppingCartResponse = await apiClientHttp.getShoppingCart(UUID);\r\n        console.log(\"start func getMyCart getShoppingCart\")\r\n        let str = JSON.stringify(getShoppingCartResponse);\r\n        console.log(\"sendRulesResponse    \" + str)\r\n\r\n        if (getShoppingCartResponse.errorMsg !== -1) {\r\n            SetError(errorCode.get(getShoppingCartResponse.errorMsg))\r\n        } else {\r\n            let shoppingBagHash = getShoppingCartResponse.value.shoppingBagHash\r\n            for (const key in shoppingBagHash) { //key = storeID\r\n                let store = JSON.stringify(shoppingBagHash[key].store);//{\"storeId\":1,\"name\":\"sys\",\"founder\":\"sysManager@gmail.com\",\"isOpen\":true,\"rate\":5}\r\n                let productQuantity = (shoppingBagHash[key].productQuantity); //{1:20, 2:50} product id and quantity\r\n                for (const key in productQuantity) {\r\n                    console.log(key)\r\n                    console.log(productQuantity[key])\r\n                    products.push({\r\n                        id: key,\r\n                        // price: store.price,\r\n                        price: -50,\r\n                        amount: productQuantity[key],\r\n                        // name: getShoppingCartResponse.value[i].amount\r\n                    })\r\n                }\r\n            }\r\n            let sum = 0;\r\n            for (let i = 0; i < products.length; i++) {\r\n                sum += products[i].price * products[i].amount;\r\n            }\r\n            setTatal(sum)\r\n            SetError(\"\")\r\n            SetProducts(products);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMyCart();\r\n    }, [Cartproducts.refresh]);\r\n\r\n    async function cancelHandler(price, storeid, productid) {\r\n        console.log(\"removeProductFromShoppingBagResponse   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ \")\r\n\r\n        // removeProductFromShoppingBag :async (uuid, storeid, productid) => {\r\n        const removeProductFromShoppingBagResponse = await apiClientHttp.removeProductFromShoppingBag(UUID, storeid, productid);\r\n        let str = JSON.stringify(removeProductFromShoppingBagResponse);\r\n        console.log(\"removeProductFromShoppingBagResponse    \" + str)\r\n        if (removeProductFromShoppingBagResponse.errorMsg !== -1) {\r\n            SetError(errorCode.get(removeProductFromShoppingBagResponse.errorMsg))\r\n        } else {\r\n            setTatal(total - price);\r\n        }\r\n    }\r\n\r\n    let productIDs = Cartproducts.map((expense) => (\r\n        <ProductInCart\r\n            id={expense.id}\r\n            // name={expense.name}\r\n            amount={expense.amount}\r\n            price={expense.price}\r\n            onCancel={cancelHandler}\r\n            uuid={UUID}\r\n        />\r\n    ));\r\n    const [command, setCommand] = useState(\r\n        <div>\r\n            {/*<ul className=\"products-list\">{productIDs}</ul>*/}\r\n\r\n            {/*<h3>Total Price: ${total}</h3>*/}\r\n        </div>\r\n    );\r\n\r\n    const buyHandler = () => {\r\n        setCommand(<BuyCart uuid={UUID} onMarket={() => props.onMarket()}/>);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={{\r\n                color: 'black',\r\n                position: 'relative',\r\n                background: '#c51244',\r\n                fontSize: 15\r\n            }}>{enteredError}</div>\r\n            <h3>My Cart</h3>\r\n            <h3>Total Price: ${total}</h3>\r\n            <button onClick={buyHandler}> Buy All The Cart</button>\r\n            {command}\r\n            <ul className=\"products-list\">{productIDs}</ul>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyCart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}