{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lielk\\\\Documents\\\\GitHub\\\\Market\\\\Front End\\\\my-app\\\\src\\\\components\\\\BuyingPolicy\\\\simpleBuyingRules\\\\ShoppingBagRules.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport createApiClientHttp from \"../../../client/clientHttp.js\";\nimport { errorCode } from \"../../../ErrorCodeGui\";\nimport * as RulesClass from \"../../RulesHelperClasses/BuyingRules\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShoppingBagRule = props => {\n  _s();\n\n  console.log(\"ShoppingBagRule\");\n  const apiClientHttp = createApiClientHttp();\n  const [enteredError, SetError] = useState(\"\");\n  let UUID = props.uuid;\n  let storeID = props.storeID;\n  const [minQuantity, setminQuantity] = useState(\"\");\n\n  const changeQuantityHandler = event => {\n    setminQuantity(event.target.value);\n  };\n\n  const [minProductTypes, setminProductTypes] = useState(\"\");\n\n  const changeProductTypeHandler = event => {\n    setminProductTypes(event.target.value);\n  };\n\n  const cleanHandler = () => {\n    setminQuantity(\"\");\n    setminProductTypes(\"\");\n  }; //todo: add new ShoppingBag Rule to store\n\n\n  async function addHandler() {\n    console.log(\"addHandler\");\n    let rule = new RulesClass.ShoppingRule(UUID, storeID, minQuantity, minProductTypes);\n\n    if (props.compose === undefined) {\n      //false case - no comopse - realy simple\n      const sendRulesResponse = await apiClientHttp.sendRules(UUID, storeID, {\n        'UserRule': rule\n      });\n\n      if (sendRulesResponse.errorMsg !== -1) {\n        SetError(errorCode.get(sendRulesResponse.errorMsg));\n      } else {\n        cleanHandler(); // props.onRule(sendRulesResponse.value);\n\n        props.onRule(-1);\n      }\n    } else {\n      cleanHandler();\n      props.onRule(rule);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Add Shopping Bag Rule For store #\", storeID]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          value: minQuantity,\n          placeholder: \"Write Minmum Quantity\",\n          onChange: changeQuantityHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Product Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          value: minProductTypes,\n          placeholder: \"Write Minmum Product Types\",\n          onChange: changeProductTypeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cleanHandler,\n        children: \"Clean\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addHandler,\n        children: \"Add Rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShoppingBagRule, \"mD7xFNKnn4XAwOC5NzPiPXmVuBM=\");\n\n_c = ShoppingBagRule;\nexport default ShoppingBagRule;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShoppingBagRule\");","map":{"version":3,"names":["React","useState","createApiClientHttp","errorCode","RulesClass","ShoppingBagRule","props","console","log","apiClientHttp","enteredError","SetError","UUID","uuid","storeID","minQuantity","setminQuantity","changeQuantityHandler","event","target","value","minProductTypes","setminProductTypes","changeProductTypeHandler","cleanHandler","addHandler","rule","ShoppingRule","compose","undefined","sendRulesResponse","sendRules","errorMsg","get","onRule"],"sources":["C:/Users/lielk/Documents/GitHub/Market/Front End/my-app/src/components/BuyingPolicy/simpleBuyingRules/ShoppingBagRules.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport createApiClientHttp from \"../../../client/clientHttp.js\";\r\nimport {errorCode} from \"../../../ErrorCodeGui\"\r\nimport * as RulesClass  from \"../../RulesHelperClasses/BuyingRules\"\r\n\r\nconst ShoppingBagRule = (props) => {\r\n  console.log(\"ShoppingBagRule\")\r\n  const apiClientHttp = createApiClientHttp();\r\n  const [enteredError, SetError] = useState(\"\");\r\n\r\n  let UUID = props.uuid;\r\n  let storeID = props.storeID;\r\n\r\n  const [minQuantity, setminQuantity] = useState(\"\");\r\n  const changeQuantityHandler = (event) => {\r\n    setminQuantity(event.target.value);\r\n  };\r\n  const [minProductTypes, setminProductTypes] = useState(\"\");\r\n  const changeProductTypeHandler = (event) => {\r\n    setminProductTypes(event.target.value);\r\n  };\r\n\r\n  const cleanHandler = () => {\r\n    setminQuantity(\"\");\r\n    setminProductTypes(\"\");\r\n  };\r\n\r\n  //todo: add new ShoppingBag Rule to store\r\n  async function addHandler() {\r\n    console.log(\"addHandler\")\r\n    let rule = new RulesClass.ShoppingRule(UUID,storeID,minQuantity,minProductTypes)\r\n    if (props.compose===undefined) { //false case - no comopse - realy simple\r\n\r\n      const sendRulesResponse = await apiClientHttp.sendRules(UUID,storeID, {'UserRule':rule});\r\n\r\n      if (sendRulesResponse.errorMsg !== -1) {\r\n        SetError(errorCode.get(sendRulesResponse.errorMsg))\r\n      } else {\r\n        cleanHandler();\r\n        // props.onRule(sendRulesResponse.value);\r\n        props.onRule(-1);\r\n\r\n      }\r\n    }\r\n    else{\r\n    cleanHandler();\r\n    props.onRule(rule);\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Add Shopping Bag Rule For store #{storeID}</h3>\r\n      <div className=\"products__controls\">\r\n        <div className=\"products__control\">\r\n          <label>Quantity</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            value={minQuantity}\r\n            placeholder=\"Write Minmum Quantity\"\r\n            onChange={changeQuantityHandler}\r\n          />\r\n        </div>\r\n        <div className=\"products__control\">\r\n          <label>Product Types</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            value={minProductTypes}\r\n            placeholder=\"Write Minmum Product Types\"\r\n            onChange={changeProductTypeHandler}\r\n          />\r\n        </div>\r\n        <button onClick={cleanHandler}>Clean</button>\r\n        <button onClick={addHandler}>Add Rule</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShoppingBagRule;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}